{
    "componentChunkName": "component---node-modules-gatsby-theme-oi-wiki-src-templates-doc-js",
    "path": "/lang/pb-ds/tree/",
    "result": {"data":{"mdx":{"id":"58b0f3e9-56c2-54b7-8cd9-02caf9c6cdf3","wordCount":{"words":92},"fields":{"slug":"/lang/pb-ds/tree/","isIndex":false},"excerpt":"__gnu_pbds :: tree 附：官方文档地址 模板形参 Key: 储存的元素类型，如果想要存储多个相同的 Key 元素，则需要使用类似于 std::pair 和 struct 的方法，并配合使用 lower_bound 和 upper_bound…","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"__gnu_pbds :: tree"}]},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"__gnu_pbds--tree"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#__gnu_pbds--tree","ariaLabel":"__gnu_pbds  tree permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"附："},{"type":"element","tagName":"a","properties":{"href":"https://gcc.gnu.org/onlinedocs/libstdc++/ext/pb_ds/tree_based_containers.html"},"children":[{"type":"text","value":"官方文档地址"}]}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"模板形参"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"模板形参"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E6%A8%A1%E6%9D%BF%E5%BD%A2%E5%8F%82","ariaLabel":"模板形参 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Key"}]},{"type":"text","value":": 储存的元素类型，如果想要存储多个相同的 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Key"}]},{"type":"text","value":" 元素，则需要使用类似于 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"std::pair"}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"struct"}]},{"type":"text","value":" 的方法，并配合使用 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"lower_bound"}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"upper_bound"}]},{"type":"text","value":" 成员函数进行查找"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Mapped"}]},{"type":"text","value":": 映射规则（Mapped-Policy）类型，如果要指示关联容器是 "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"集合"}]},{"type":"text","value":"，类似于存储元素在 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"std::set"}]},{"type":"text","value":" 中，此处填入 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"null_type"}]},{"type":"text","value":"，低版本 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"g++"}]},{"type":"text","value":" 此处为 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"null_mapped_type"}]},{"type":"text","value":"；如果要指示关联容器是 "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"带值的集合"}]},{"type":"text","value":"，类似于存储元素在 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"std::map"}]},{"type":"text","value":" 中，此处填入类似于 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"std::map<Key, Value>"}]},{"type":"text","value":" 的 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Value"}]},{"type":"text","value":" 类型"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Cmp_Fn"}]},{"type":"text","value":": 关键字比较函子，例如 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"std::less<Key>"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Tag"}]},{"type":"text","value":": 选择使用何种底层数据结构类型，默认是 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"rb_tree_tag"}]},{"type":"text","value":"。"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"__gnu_pbds"}]},{"type":"text","value":" 提供不同的三种平衡树，分别是：\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"rb_tree_tag"}]},{"type":"text","value":"：红黑树，一般使用这个，后两者的性能一般不如红黑树"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"splay_tree_tag"}]},{"type":"text","value":"：splay 树"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ov_tree_tag"}]},{"type":"text","value":"：有序向量树，只是一个由 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"vector"}]},{"type":"text","value":" 实现的有序结构，类似于排序的 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"vector"}]},{"type":"text","value":" 来实现平衡树，性能取决于数据想不想卡你"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Node_Update"}]},{"type":"text","value":"：用于更新节点的策略，默认使用 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"null_node_update"}]},{"type":"text","value":"，若要使用 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"order_of_key"}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"find_by_order"}]},{"type":"text","value":" 方法，需要使用 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"tree_order_statistics_node_update"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Allocator"}]},{"type":"text","value":"：空间分配器类型"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"构造方式"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"构造方式"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E6%9E%84%E9%80%A0%E6%96%B9%E5%BC%8F","ariaLabel":"构造方式 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"成员函数"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"成员函数"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E6%88%90%E5%91%98%E5%87%BD%E6%95%B0","ariaLabel":"成员函数 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"insert(x)"}]},{"type":"text","value":"：向树中插入一个元素 x，返回 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"std::pair<point_iterator, bool>"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"erase(x)"}]},{"type":"text","value":"：从树中删除一个元素/迭代器 x，返回一个 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"bool"}]},{"type":"text","value":" 表明是否删除成功。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"order_of_key(x)"}]},{"type":"text","value":"：返回 x 以 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Cmp_Fn"}]},{"type":"text","value":" 比较的排名。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"find_by_order(x)"}]},{"type":"text","value":"：返回 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Cmp_Fn"}]},{"type":"text","value":" 比较的排名所对应元素的迭代器。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"lower_bound(x)"}]},{"type":"text","value":"：以 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Cmp_Fn"}]},{"type":"text","value":" 比较做 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"lower_bound"}]},{"type":"text","value":"，返回迭代器。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"upper_bound(x)"}]},{"type":"text","value":"：以 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Cmp_Fn"}]},{"type":"text","value":" 比较做 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"upper_bound"}]},{"type":"text","value":"，返回迭代器。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"join(x)"}]},{"type":"text","value":"：将 x 树并入当前树，前提是两棵树的类型一样，x 树被删除。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"split(x,b)"}]},{"type":"text","value":"：以 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Cmp_Fn"}]},{"type":"text","value":" 比较，小于等于 x 的属于当前树，其余的属于 b 树。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"empty()"}]},{"type":"text","value":"：返回是否为空。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"size()"}]},{"type":"text","value":"：返回大小。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"示例"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"示例"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E7%A4%BA%E4%BE%8B","ariaLabel":"示例 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"style","properties":{},"children":[{"type":"text","value":".anchorLink.before{position:absolute;top:0;left:0;transform:translateX(-100%);padding-right:4px}.anchorLink.after{display:inline-block;padding-left:4px}h1 .anchorLink svg,h2 .anchorLink svg,h3 .anchorLink svg,h4 .anchorLink svg,h5 .anchorLink svg,h6 .anchorLink svg{visibility:hidden}h1 .anchorLink:focus svg,h1:hover .anchorLink svg,h2 .anchorLink:focus svg,h2:hover .anchorLink svg,h3 .anchorLink:focus svg,h3:hover .anchorLink svg,h4 .anchorLink:focus svg,h4:hover .anchorLink svg,h5 .anchorLink:focus svg,h5:hover .anchorLink svg,h6 .anchorLink:focus svg,h6:hover .anchorLink svg{visibility:visible}a.anchor{display:inline-block;position:relative;top:-159px;visibility:hidden}@media only screen and (max-width:1279.95px){a.anchor{top:-101px}}"}]}],"data":{"quirksMode":false}},"headings":[{"value":"__gnu_pbds :: tree<a className=\"anchor\" id=\"__gnu_pbds--tree\"></a>","depth":2,"id":null},{"value":"模板形参<a className=\"anchor\" id=\"模板形参\"></a>","depth":2,"id":null},{"value":"构造方式<a className=\"anchor\" id=\"构造方式\"></a>","depth":2,"id":null},{"value":"成员函数<a className=\"anchor\" id=\"成员函数\"></a>","depth":2,"id":null},{"value":"示例<a className=\"anchor\" id=\"示例\"></a>","depth":2,"id":null}],"frontmatter":{"author":"Ir1d, Flex, Danni, opsiff","tags":["lang","pb-ds"],"title":"平衡树","noMeta":null,"noComment":null,"description":null},"parent":{"relativePath":"lang/pb-ds/tree.md","modifiedTime":"2023/02/03","birthTime":"2023-02-03T16:29:10.794Z","changeTime":"2023-02-03T16:29:10.794Z"}}},"pageContext":{"id":"58b0f3e9-56c2-54b7-8cd9-02caf9c6cdf3","lastModified":"2022-02-12T20:36:07-06:00","next":{"node":{"fields":{"slug":"/ds/seg-in-balanced/"},"id":"9977bdf1-b025-56de-a87c-20c0290de75a","frontmatter":{"tags":["ds"],"title":"平衡树套线段树"},"fileAbsolutePath":"/home/runner/work/oiwiki-bootstrap/oiwiki-bootstrap/cauldron/docs/ds/seg-in-balanced.md"}}}},
    "staticQueryHashes": ["2462162885","2862490856","3656965534"]}