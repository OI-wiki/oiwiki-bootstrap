{
    "componentChunkName": "component---node-modules-gatsby-theme-oi-wiki-src-templates-doc-js",
    "path": "/lang/reference/",
    "result": {"data":{"mdx":{"id":"229a0ed9-9d5a-5868-94ba-b4cd3a7b9b34","wordCount":{"words":163},"fields":{"slug":"/lang/reference/","isIndex":false},"excerpt":"引用可以看成是 C++ 封装的指针，用来传递它所指向的对象。在 C…","htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"引用可以看成是 C++ 封装的指针，用来传递它所指向的对象。在 C++ 代码中实际上会经常和引用打交道，但是通常不会显式地表现出来。引用的基本原则是在声明时必须指向对象，以及对引用的一切操作都相当于对原对象操作。另外，引用不是对象，因此不存在引用的数组、无法获取引用的指针，也不存在引用的引用。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"注意引用类型不属于对象类型，所以才需要 "},{"type":"element","tagName":"a","properties":{"href":"https://zh.cppreference.com/w/cpp/utility/functional/reference_wrapper"},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"reference_wrapper"}]}]},{"type":"text","value":" 这种设施。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"引用主要分为两种，左值引用和右值引用。此外还有两种特殊的引用：转发引用和垂悬引用，不作详细介绍。另外，本文还牵涉到一部分常值的内容，请用 "},{"type":"element","tagName":"a","properties":{"href":"./const.md"},"children":[{"type":"text","value":"常值"}]},{"type":"text","value":" 一文辅助阅读。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"左值引用"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"左值引用"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%B7%A6%E5%80%BC%E5%BC%95%E7%94%A8","ariaLabel":"左值引用 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"details","properties":{"className":["note"],"open":"false"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"左值和右值"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果你不知道什么是左值和右值，可以参考 "},{"type":"element","tagName":"a","properties":{"href":"./value-category.md"},"children":[{"type":"text","value":"值类别"}]},{"type":"text","value":" 页面。"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"details","properties":{"className":["note"],"open":"false"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"左值表达式"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果一个表达式返回的是左值，那么这个表达式被称为左值表达式。右值表达式亦然。"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"通常我们会接触到的引用为左值引用，即绑定到左值的引用，但 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" 的左值引用可以绑定到右值。以下是来自 "},{"type":"element","tagName":"a","properties":{"href":"https://zh.cppreference.com/w/cpp/language/reference"},"children":[{"type":"text","value":"参考手册"}]},{"type":"text","value":" 的一段示例代码。"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"左值引用最常用的地方是函数参数，通过左值引用传参可以起到与通过指针传参相同的效果。"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"右值引用 (C++ 11)"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"右值引用-c-11"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%8F%B3%E5%80%BC%E5%BC%95%E7%94%A8-c-11","ariaLabel":"右值引用 c 11 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"右值引用是绑定到右值的引用。右值 "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"可以在内存里也可以在 CPU 寄存器中"}]},{"type":"text","value":"。另外，右值引用可以被看作一种 "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"延长临时对象生存期的方式"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在上述代码中，"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"r3"}]},{"type":"text","value":" 是一个右值引用，引用的是右值 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"s1 + s1"}]},{"type":"text","value":"。"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"r2"}]},{"type":"text","value":" 是一个左值引用，可以发现 "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"右值引用可以转为 const 修饰的左值引用"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"一些例子"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"一些例子"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E4%B8%80%E4%BA%9B%E4%BE%8B%E5%AD%90","ariaLabel":"一些例子 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"++i"}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"i++"}]},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"i-和-i"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#i-%E5%92%8C-i","ariaLabel":"i 和 i permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"++i"}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"i++"}]},{"type":"text","value":" 是典型的左值和右值。"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"++i"}]},{"type":"text","value":" 的实现是直接给 i 变量加一，然后返回 i 本身。因为 i 是内存中的变量，因此可以是左值。实际上前自增的函数签名是 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"T& T::operator++();"}]},{"type":"text","value":"。而 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"i++"}]},{"type":"text","value":" 则不一样，它的实现是用临时变量存下 i，然后再对 i 加一，返回的是临时变量，因此是右值。后自增的函数签名是 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"T T::operator++(int);"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"移动语义和 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"std::move"}]},{"type":"text","value":"(C++11)"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"移动语义和-stdmovec11"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E7%A7%BB%E5%8A%A8%E8%AF%AD%E4%B9%89%E5%92%8C-stdmovec11","ariaLabel":"移动语义和 stdmovec11 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在 C++11 之后，C++ 利用右值引用新增了移动语义的支持，用来避免对象在堆空间的复制（但是无法避免栈空间复制），STL 容器对该特性有完整支持。具体特性有 "},{"type":"element","tagName":"a","properties":{"href":"https://zh.cppreference.com/w/cpp/language/move_constructor"},"children":[{"type":"text","value":"移动构造函数"}]},{"type":"text","value":"、"},{"type":"element","tagName":"a","properties":{"href":"https://zh.cppreference.com/w/cpp/language/move_assignment"},"children":[{"type":"text","value":"移动赋值"}]},{"type":"text","value":" 和具有移动能力的函数（参数里含有右值引用）。\n另外，"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"std::move"}]},{"type":"text","value":" 函数可以用来产生右值引用，需要包含 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"<utility>"}]},{"type":"text","value":" 头文件。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"注意：一个对象被移动后不应对其进行任何操作，无论是修改还是访问"}]},{"type":"text","value":"。被移动的对象处于有效但未指定的状态，具体内容依赖于 stl 的实现。如果需要访问（即指定一种状态），可以使用该对象的 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"swap"}]},{"type":"text","value":" 成员函数或者偏特化的 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"std::swap"}]},{"type":"text","value":" 交换两个对象（同样可以避免堆空间的复制）。"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"注意上述代码仅在 C++11 之后可用。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"函数返回引用"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"函数返回引用"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%87%BD%E6%95%B0%E8%BF%94%E5%9B%9E%E5%BC%95%E7%94%A8","ariaLabel":"函数返回引用 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"让函数返回引用值可以避免函数在返回时对返回值进行拷贝，如"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"你不能返回在函数中的局部变量的引用，如果一定要在函数内的变量。请使用动态内存。例如如下两个函数都会产生悬垂引用，导致未定义行为。"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当右值引用指向的空间在进入函数前已经分配时，右值引用可以避免返回值拷贝。"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"参考内容"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"参考内容"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%8F%82%E8%80%83%E5%86%85%E5%AE%B9","ariaLabel":"参考内容 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://zh.cppreference.com/w/cpp/language/reference"},"children":[{"type":"text","value":"C++ 语言文档——引用声明"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://zh.cppreference.com/w/cpp/language/value_category"},"children":[{"type":"text","value":"C++ 语言文档——值类别"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://stackoverflow.com/questions/1116641/is-returning-by-rvalue-reference-more-efficient"},"children":[{"type":"text","value":"Is returning by rvalue reference more efficient?"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.luogu.com.cn/blog/SuperConstructor/qian-tan-zhi-lei-bie-ji-ji-li-shi"},"children":[{"type":"text","value":"浅谈值类别及其历史"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"style","properties":{},"children":[{"type":"text","value":".anchorLink.before{position:absolute;top:0;left:0;transform:translateX(-100%);padding-right:4px}.anchorLink.after{display:inline-block;padding-left:4px}h1 .anchorLink svg,h2 .anchorLink svg,h3 .anchorLink svg,h4 .anchorLink svg,h5 .anchorLink svg,h6 .anchorLink svg{visibility:hidden}h1 .anchorLink:focus svg,h1:hover .anchorLink svg,h2 .anchorLink:focus svg,h2:hover .anchorLink svg,h3 .anchorLink:focus svg,h3:hover .anchorLink svg,h4 .anchorLink:focus svg,h4:hover .anchorLink svg,h5 .anchorLink:focus svg,h5:hover .anchorLink svg,h6 .anchorLink:focus svg,h6:hover .anchorLink svg{visibility:visible}a.anchor{display:inline-block;position:relative;top:-159px;visibility:hidden}@media only screen and (max-width:1279.95px){a.anchor{top:-101px}}"}]}],"data":{"quirksMode":false}},"headings":[{"value":"左值引用<a className=\"anchor\" id=\"左值引用\"></a>","depth":2,"id":null},{"value":"右值引用 (C++ 11)<a className=\"anchor\" id=\"右值引用-c-11\"></a>","depth":2,"id":null},{"value":"一些例子<a className=\"anchor\" id=\"一些例子\"></a>","depth":2,"id":null},{"value":"++i 和 i++<a className=\"anchor\" id=\"i-和-i\"></a>","depth":3,"id":null},{"value":"移动语义和 std::move(C++11)<a className=\"anchor\" id=\"移动语义和-stdmovec11\"></a>","depth":3,"id":null},{"value":"函数返回引用<a className=\"anchor\" id=\"函数返回引用\"></a>","depth":3,"id":null},{"value":"参考内容<a className=\"anchor\" id=\"参考内容\"></a>","depth":2,"id":null}],"frontmatter":{"author":"Ir1dXD, ksyx, Jacder, CoderOJ, mgt, Margatroid, Jacob","tags":["lang"],"title":"引用","noMeta":null,"noComment":null,"description":null},"parent":{"relativePath":"lang/reference.md","modifiedTime":"2023/02/03","birthTime":"2023-02-03T16:29:10.790Z","changeTime":"2023-02-03T16:29:10.790Z"}}},"pageContext":{"id":"229a0ed9-9d5a-5868-94ba-b4cd3a7b9b34","lastModified":"2022-02-12T20:36:07-06:00","next":{"node":{"fields":{"slug":"/graph/chord/"},"id":"6eda6103-9781-5823-96cb-187f754df364","frontmatter":{"tags":["graph"],"title":"弦图"},"fileAbsolutePath":"/home/runner/work/oiwiki-bootstrap/oiwiki-bootstrap/cauldron/docs/graph/chord.md"}}}},
    "staticQueryHashes": ["2462162885","2862490856","3656965534"]}