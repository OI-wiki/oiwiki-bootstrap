{
    "componentChunkName": "component---node-modules-gatsby-theme-oi-wiki-src-templates-doc-js",
    "path": "/lang/basic/",
    "result": {"data":{"mdx":{"id":"08d76662-d5e4-591e-ab17-3df27519ee82","wordCount":{"words":471},"fields":{"slug":"/lang/basic/","isIndex":false},"excerpt":"代码框架 如果你不想深究背后的原理，初学时可以直接将这个“框架”背下来： 什么是 include？ #include 其实是一个预处理命令，意思为将一个文件“放”在这条语句处，被“放”的文件被称为头文件。也就是说，在编译时，编译器会“复制”头文件 iostream…","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"代码框架"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"代码框架"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E4%BB%A3%E7%A0%81%E6%A1%86%E6%9E%B6","ariaLabel":"代码框架 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果你不想深究背后的原理，初学时可以直接将这个“框架”背下来："}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"details","properties":{"className":["note"],"open":"false"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"什么是 include？"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#include"}]},{"type":"text","value":" 其实是一个预处理命令，意思为将一个文件“放”在这条语句处，被“放”的文件被称为头文件。也就是说，在编译时，编译器会“复制”头文件 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"iostream"}]},{"type":"text","value":" 中的内容，“粘贴”到 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#include <iostream>"}]},{"type":"text","value":" 这条语句处。这样，你就可以使用 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"iostream"}]},{"type":"text","value":" 中提供的 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"std::cin"}]},{"type":"text","value":"、"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"std::cout"}]},{"type":"text","value":"、"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"std::endl"}]},{"type":"text","value":" 等对象了。"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果你学过 C 语言，你会发现目前我们接触的 C++ 中的头文件一般都不带 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".h"}]},{"type":"text","value":" 后缀，而那些 C 语言中的头文件 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"xx.h"}]},{"type":"text","value":" 都变成了 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cxx"}]},{"type":"text","value":"，如 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"stdio.h"}]},{"type":"text","value":" 变成了 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cstdio"}]},{"type":"text","value":"。因为 C++ 为了和 C 保持兼容，都直接使用了 C 语言中的头文件，为了区分 C++ 的头文件和 C 的头文件，使用了 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"c"}]},{"type":"text","value":" 前缀。"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"一般来说，应当根据你需要编写的 C++ 程序的需要来确定你要 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#include"}]},{"type":"text","value":" 哪些头文件。但如果你 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#include"}]},{"type":"text","value":" 了多余的头文件，只会增加编译时间，几乎不会对运行时间造成影响。目前我们只接触到了 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"iostream"}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cstdio"}]},{"type":"text","value":" 两个头文件，如果你只需要 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"scanf"}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"printf"}]},{"type":"text","value":"，就可以不用 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#include <iostream>"}]},{"type":"text","value":"。"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"可以 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#include"}]},{"type":"text","value":" 自己写的头文件吗？答案是，可以。"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"你可以自己写一个头文件，如："},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"myheader.h"}]},{"type":"text","value":"。然后，将其放到和你的代码相同的目录里，再 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#include \"myheader.h\""}]},{"type":"text","value":" 即可。需要注意的是，自定义的头文件需要使用引号而非尖括号。当然，你也可以使用编译命令 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"-I <header_file_path>"}]},{"type":"text","value":" 来告诉编译器在哪找头文件，就不需要将头文件放到和代码相同的目录里了。"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"details","properties":{"className":["note"],"open":"false"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"什么是 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"main()"}]},{"type":"text","value":" ？"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"可以理解为程序运行时就会执行 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"main()"}]},{"type":"text","value":" 中的代码。"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"实际上，"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"main"}]},{"type":"text","value":" 函数是由系统或外部程序调用的。如，你在命令行中调用了你的程序，也就是调用了你程序中的 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"main"}]},{"type":"text","value":" 函数（在此之前先完成了全局 "},{"type":"element","tagName":"a","properties":{"href":"./var.md"},"children":[{"type":"text","value":"变量"}]},{"type":"text","value":" 的构造）。"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"最后的 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"return 0;"}]},{"type":"text","value":" 表示程序运行成功。默认情况下，程序结束时返回 0 表示一切正常，否则返回值表示错误代码（在 Windows 下这个错误代码的十六进制可以通过 "},{"type":"element","tagName":"a","properties":{"href":"https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-erref/"},"children":[{"type":"text","value":"Windows Error Codes 网站"}]},{"type":"text","value":" 进行查询）。这个值返回给谁呢？其实就是调用你写的程序的系统或外部程序，它会在你的程序结束时接收到这个返回值。如果不写 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"return"}]},{"type":"text","value":" 语句的话，程序正常结束默认返回值也是 0。"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在 C 或 C++ 中，程序的返回值不为 0 会导致运行时错误（RE）。"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"注释"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"注释"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E6%B3%A8%E9%87%8A","ariaLabel":"注释 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在 C++ 代码中，注释有两种写法："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"行内注释"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"以 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"//"}]},{"type":"text","value":" 开头，行内位于其后的内容全部为注释。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"注释块"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"以 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"/*"}]},{"type":"text","value":" 开头，"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"*/"}]},{"type":"text","value":" 结尾，中间的内容全部为注释，可以跨行。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"注释对程序运行没有影响，可以用来解释程序的意思，还可以在让某段代码不执行（但是依然保留在源文件里）。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在工程开发中，注释可以便于日后维护、他人阅读。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在 OI 中，很少有人写许多注释，但注释可以便于在写代码的时候理清思路，或者便于日后复习。而且，如果要写题解、教程的话，适量的注释可以便于读者阅读，理解代码的意图。希望各位同学能养成写注释的好习惯。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"输入与输出"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"输入与输出"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E8%BE%93%E5%85%A5%E4%B8%8E%E8%BE%93%E5%87%BA","ariaLabel":"输入与输出 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cin"}]},{"type":"text","value":" 与 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cout"}]},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"cin-与-cout"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#cin-%E4%B8%8E-cout","ariaLabel":"cin 与 cout permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"details","properties":{"className":["note"],"open":"true"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"什么是变量？"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"可以参考 "},{"type":"element","tagName":"a","properties":{"href":"./var.md"},"children":[{"type":"text","value":"变量"}]},{"type":"text","value":" 页面。"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"details","properties":{"className":["note"],"open":"true"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"什么是 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"std"}]},{"type":"text","value":" ？"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"std 是 C++ 标准库所使用的 "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"命名空间"}]},{"type":"text","value":"。使用命名空间是为了避免重名。"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"关于命名空间的详细知识，可以参考 "},{"type":"element","tagName":"a","properties":{"href":"./namespace.md"},"children":[{"type":"text","value":"命名空间"}]},{"type":"text","value":" 页面。"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"scanf"}]},{"type":"text","value":" 与 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"printf"}]},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"scanf-与-printf"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#scanf-%E4%B8%8E-printf","ariaLabel":"scanf 与 printf permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"scanf"}]},{"type":"text","value":" 与 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"printf"}]},{"type":"text","value":" 其实是 C 语言提供的函数。大多数情况下，它们的速度比 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cin"}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cout"}]},{"type":"text","value":" 更快，并且能够方便地控制输入输出格式。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"details","properties":{"className":["note"],"open":"true"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"读入输出优化"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cin"}]},{"type":"text","value":"/"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cout"}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"scanf"}]},{"type":"text","value":"/"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"prinf"}]},{"type":"text","value":" 的具体差别和读入输出优化，请参考 "},{"type":"element","tagName":"a","properties":{"href":"../contest/io.md"},"children":[{"type":"text","value":"读入、输出优化"}]},{"type":"text","value":" 页面。"}]}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"其中，"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"%d"}]},{"type":"text","value":" 表示读入/输出的变量是一个有符号整型 ("},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"int"}]},{"type":"text","value":" 型）的变量。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"类似地："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"%s"}]},{"type":"text","value":" 表示字符串。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"%c"}]},{"type":"text","value":" 表示字符。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"%lf"}]},{"type":"text","value":" 表示双精度浮点数 ("},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"double"}]},{"type":"text","value":")。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"%lld"}]},{"type":"text","value":" 表示长整型 ("},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"long long"}]},{"type":"text","value":")。根据系统不同，也可能是 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"%I64d"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"%u"}]},{"type":"text","value":" 表示无符号整型  ("},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"unsigned int"}]},{"type":"text","value":")。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"%llu"}]},{"type":"text","value":" 表示无符号长整型 ("},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"unsigned long long"}]},{"type":"text","value":")，也可能是 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"%I64u"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"除了类型标识符以外，还有一些控制格式的方式。许多都不常用，选取两个常用的列举如下："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"%1d"}]},{"type":"text","value":" 表示长度为 1 的整型。在读入时，即使没有空格也可以逐位读入数字。在输出时，若指定的长度大于数字的位数，就会在数字前用空格填充。若指定的长度小于数字的位数，就没有效果。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"%.6lf"}]},{"type":"text","value":"，用于输出，保留六位小数。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这两种运算符的相应地方都可以填入其他数字，例如 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"%.3lf"}]},{"type":"text","value":" 表示保留三位小数。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"details","properties":{"className":["note"],"open":"false"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"“双精度浮点数”，“长整型”是什么"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这些表示变量的类型。和上面一样，会留到 "},{"type":"element","tagName":"a","properties":{"href":"./var.md"},"children":[{"type":"text","value":"变量"}]},{"type":"text","value":" 中统一讲解。"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"details","properties":{"className":["note"],"open":"false"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"为什么 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"scanf"}]},{"type":"text","value":" 中有 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"&"}]},{"type":"text","value":" 运算符？"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在这里，"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"&"}]},{"type":"text","value":" 实际上是取址运算符，返回的是变量在内存中的地址。而 scanf 接收的参数就是变量的地址。具体可能要在 "},{"type":"element","tagName":"a","properties":{"href":"./pointer.md"},"children":[{"type":"text","value":"指针"}]},{"type":"text","value":" 才能完全清楚地说明，现在只需要记下来就好了。"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"details","properties":{"className":["note"],"open":"false"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"什么是 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\\n"}]},{"type":"text","value":" ？"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\\n"}]},{"type":"text","value":" 是一种 "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"转义字符"}]},{"type":"text","value":"，表示换行。"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"转义字符用来表示一些无法直接输入的字符，如由于字符串字面量中无法换行而无法直接输入的换行符，由于有特殊含义而无法输入的引号，由于表示转义字符而无法输入的反斜杠。"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"常用的转义字符有："}]},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\\t"}]},{"type":"text","value":" 表示制表符。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\\\\"}]},{"type":"text","value":" 表示 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\\"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\\\""}]},{"type":"text","value":" 表示 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\""}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\\0"}]},{"type":"text","value":" 表示空字符，用来表示 C 风格字符串的结尾。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\\r"}]},{"type":"text","value":" 表示回车。Linux 中换行符为 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\\n"}]},{"type":"text","value":"，Windows 中换行符为 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\\r\\n"}]},{"type":"text","value":"。在 OI 中，如果输出需要换行，使用 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\\n"}]},{"type":"text","value":" 即可。但读入时，如果使用逐字符读入，可能会由于换行符造成一些问题，需要注意。例如，"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"gets"}]},{"type":"text","value":" 将 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\\n"}]},{"type":"text","value":" 作为字符串结尾，这时候如果换行符是 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\\r\\n"}]},{"type":"text","value":"，"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\\r"}]},{"type":"text","value":" 就会留在字符串结尾。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"特殊地，"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"%%"}]},{"type":"text","value":" 表示 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"%"}]},{"type":"text","value":"，只能用在 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"printf"}]},{"type":"text","value":" 或 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"scanf"}]},{"type":"text","value":" 中，在其他字符串字面量中只需要简单使用 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"%"}]},{"type":"text","value":" 就好了。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"element","tagName":"details","properties":{"className":["note"],"open":"false"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"什么是字面量？"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"“字面量”是在代码里直接作为一个值的程序段，例如 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"3"}]},{"type":"text","value":" 就是一个 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"int"}]},{"type":"text","value":" 字面量，"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'c'"}]},{"type":"text","value":" 就是一个 char 字面量。我们上面写的程序中的 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\"hello world\""}]},{"type":"text","value":" 也是一个字符串字面量。"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"不加解释、毫无来由的字面量又被称为“魔术数”（magic number），如果代码需要被人阅读的话，这是一种十分不被推荐的行为。"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"一些扩展内容"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"一些扩展内容"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95%E5%86%85%E5%AE%B9","ariaLabel":"一些扩展内容 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"C++ 中的空白字符"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"c-中的空白字符"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#c-%E4%B8%AD%E7%9A%84%E7%A9%BA%E7%99%BD%E5%AD%97%E7%AC%A6","ariaLabel":"c 中的空白字符 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在 C++ 中，所有空白字符（空格、制表符、换行），多个或是单个，都被视作是一样的。（当然，引号中视作字符串的一部分的不算。）"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"因此，你可以自由地使用任何代码风格（除了行内注释、字符串字面量与预处理命令必须在单行内），例如："}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当然，这么做是不被推荐的。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"一种也被广泛使用但与 "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"OI Wiki"}]},{"type":"text","value":" 要求的码风不同的代码风格："}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#define"}]},{"type":"text","value":" 命令"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"define-命令"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#define-%E5%91%BD%E4%BB%A4","ariaLabel":"define 命令 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#define"}]},{"type":"text","value":" 是一种预处理命令，用于定义宏，本质上是文本替换。例如："}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"details","properties":{"className":["note"],"open":"false"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"什么是标识符？"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"标识符就是可以用作变量名的一组字符。例如，"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"abcd"}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"abc1"}]},{"type":"text","value":" 都是合法的标识符，而 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"1a"}]},{"type":"text","value":" 和 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"c+b"}]},{"type":"text","value":" 都不是合法的标识符。"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"标识符由英文字母、下划线开头，中间只允许出现英文字母、下划线和数字。值得注意的是，关键字（如 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"int"}]},{"type":"text","value":","},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"for"}]},{"type":"text","value":","},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"if"}]},{"type":"text","value":"）不能用作标识符。"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"details","properties":{"className":["note"],"open":"false"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"什么是预处理命令？"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"预处理命令就是预处理器所接受的命令，用于对代码进行初步的文本变换，比如 文件包含操作 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#include"}]},{"type":"text","value":" 和 处理宏 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#define"}]},{"type":"text","value":" 等，对 GCC 而言，默认不会保留预处理阶段的输出 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":".i"}]},{"type":"text","value":" 文件。可以用 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"-E"}]},{"type":"text","value":" 选项保留输出文件。"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"宏可以带参数，带参数的宏可以像函数一样使用："}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"但是带参数的宏和函数有区别。因为宏是文本替换，所以会引发许多问题。如："}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"使用 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#define"}]},{"type":"text","value":" 是有风险的（由于 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#define"}]},{"type":"text","value":" 作用域是整个程序，因此可能导致文本被意外地替换，需要使用 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#undef"}]},{"type":"text","value":" 及时取消定义），因此应谨慎使用。较为推荐的做法是：使用 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" 限定符声明常量，使用函数代替宏。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"但是，在 OI 中，"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#define"}]},{"type":"text","value":" 依然有用武之处（以下两种是不被推荐的用法，会降低代码的规范性）："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#define int long long"}]},{"type":"text","value":"+"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"signed main()"}]},{"type":"text","value":"。通常用于避免忘记开 long long 导致的错误，或是调试时排除忘开 long long 导致错误的可能性。（也可能导致增大常数甚至 TLE，或者因为爆空间而 MLE）"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#define For(i, l, r) for (int i = (l); i <= (r); ++i)"}]},{"type":"text","value":"、"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#define pb push_back"}]},{"type":"text","value":"、"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#define mid ((l + r) / 2)"}]},{"type":"text","value":"，用于减短代码长度。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"不过，"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#define"}]},{"type":"text","value":" 也有优点，比如结合 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#ifdef"}]},{"type":"text","value":" 等预处理指令有奇效，比如："}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"可以在编译的时候通过 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"-DLINUX"}]},{"type":"text","value":" 来控制编译出的代码，而无需修改源文件。这还有一个优点：通过 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"-DLINUX"}]},{"type":"text","value":" 编译出的可执行文件里并没有其他操作系统的代码，那些代码在预处理的时候就已经被删除了。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#define"}]},{"type":"text","value":" 还能使用 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#"}]},{"type":"text","value":"、"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"##"}]},{"type":"text","value":" 运算符，极大地方便调试。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"style","properties":{},"children":[{"type":"text","value":".anchorLink.before{position:absolute;top:0;left:0;transform:translateX(-100%);padding-right:4px}.anchorLink.after{display:inline-block;padding-left:4px}h1 .anchorLink svg,h2 .anchorLink svg,h3 .anchorLink svg,h4 .anchorLink svg,h5 .anchorLink svg,h6 .anchorLink svg{visibility:hidden}h1 .anchorLink:focus svg,h1:hover .anchorLink svg,h2 .anchorLink:focus svg,h2:hover .anchorLink svg,h3 .anchorLink:focus svg,h3:hover .anchorLink svg,h4 .anchorLink:focus svg,h4:hover .anchorLink svg,h5 .anchorLink:focus svg,h5:hover .anchorLink svg,h6 .anchorLink:focus svg,h6:hover .anchorLink svg{visibility:visible}a.anchor{display:inline-block;position:relative;top:-159px;visibility:hidden}@media only screen and (max-width:1279.95px){a.anchor{top:-101px}}"}]}],"data":{"quirksMode":false}},"headings":[{"value":"代码框架<a className=\"anchor\" id=\"代码框架\"></a>","depth":2,"id":null},{"value":"注释<a className=\"anchor\" id=\"注释\"></a>","depth":2,"id":null},{"value":"输入与输出<a className=\"anchor\" id=\"输入与输出\"></a>","depth":2,"id":null},{"value":"cin 与 cout<a className=\"anchor\" id=\"cin-与-cout\"></a>","depth":3,"id":null},{"value":"scanf 与 printf<a className=\"anchor\" id=\"scanf-与-printf\"></a>","depth":3,"id":null},{"value":"一些扩展内容<a className=\"anchor\" id=\"一些扩展内容\"></a>","depth":2,"id":null},{"value":"C++ 中的空白字符<a className=\"anchor\" id=\"c-中的空白字符\"></a>","depth":3,"id":null},{"value":"#define 命令<a className=\"anchor\" id=\"define-命令\"></a>","depth":3,"id":null}],"frontmatter":{"author":"Scott, Ir1dXD, Danni, Camber, Xeonacid, opsiff, mgt, Chrogeek, H-J-Granger, Margatroid, abc1763613206, orzAtalod, Shuhao, lihaoyu1234, ouuan","tags":["lang"],"title":"C++ 语法基础","noMeta":null,"noComment":null,"description":null},"parent":{"relativePath":"lang/basic.md","modifiedTime":"2023/02/03","birthTime":"2023-02-03T16:29:10.790Z","changeTime":"2023-02-03T16:29:10.790Z"}}},"pageContext":{"id":"08d76662-d5e4-591e-ab17-3df27519ee82","lastModified":"2022-06-22T10:04:10+08:00","next":{"node":{"fields":{"slug":"/tools/judger/ccr-plus/"},"id":"684362cb-cff9-5df8-8bd0-6ef22bbe7dcc","frontmatter":{"tags":["tools","judger"],"title":"CCR Plus"},"fileAbsolutePath":"/home/runner/work/oiwiki-bootstrap/oiwiki-bootstrap/cauldron/docs/tools/judger/ccr-plus.md"}}}},
    "staticQueryHashes": ["2462162885","2862490856","3656965534"]}