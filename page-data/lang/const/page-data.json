{
    "componentChunkName": "component---node-modules-gatsby-theme-oi-wiki-src-templates-doc-js",
    "path": "/lang/const/",
    "result": {"data":{"mdx":{"id":"915f9374-a68c-566a-ad62-3d353904ebac","wordCount":{"words":122},"fields":{"slug":"/lang/const/","isIndex":false},"excerpt":"C++ 定义了一套完善的只读量定义方法，被常量修饰符 const 修饰的对象或类型都是只读量，只读量的内存存储与一般变量没有任何区别，但是编译器会在编译期进行冲突检查，避免对只读量的修改。因此合理使用 const 修饰符可以增加代码健壮性。 常类型 在类型的名字前增加 const…","htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"C++ 定义了一套完善的只读量定义方法，被常量修饰符 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" 修饰的对象或类型都是只读量，只读量的内存存储与一般变量没有任何区别，但是编译器会在编译期进行冲突检查，避免对只读量的修改。因此合理使用 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}]},{"type":"text","value":" 修饰符可以增加代码健壮性。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"常类型"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"常类型"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%B8%B8%E7%B1%BB%E5%9E%8B","ariaLabel":"常类型 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在类型的名字前增加 const 修饰会将该类型的变量标记为不可变的。具体使用情况有常量和常引用（指针）两种。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"常量"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"常量"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%B8%B8%E9%87%8F","ariaLabel":"常量 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这里的常量即常变量，指的是 const 类型的变量（而不是标题里泛指的只读量）。常类型量在声明之后便不可重新赋值，也不可访问其可变成员，只能访问其常成员。常成员的定义见后文。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"details","properties":{"className":["note"],"open":"false"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"类型限定符"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"C++ 中类型限定符一共有三种：常量（const）、可变（mutable）和易变（volatile），其中默认情况下是可变变量，声明易变变量的情形是为了刻意避免编译器优化。"}]}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"常引用、常指针"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"常引用常指针"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%B8%B8%E5%BC%95%E7%94%A8%E5%B8%B8%E6%8C%87%E9%92%88","ariaLabel":"常引用常指针 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"常引用和常指针也与常量类似，但区别在于他们是限制了访问，而没有更改原变量的类型。"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"另外需要区分开的是“常类型指针”和“常指针变量”（即常指针、指针常量），例如下列声明"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我们把常类型指针又称 "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"底层指针"}]},{"type":"text","value":"、常指针变量又称 "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"顶层指针"}]},{"type":"text","value":"。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"另外，C++ 中还提供了 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const_cast"}]},{"type":"text","value":" 运算符来强行去掉或者增加引用或指针类型的 const 限定，不到万不得已的时候请不要使用这个关键字。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"常参数"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"常参数"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%B8%B8%E5%8F%82%E6%95%B0","ariaLabel":"常参数 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在函数参数里限定参数为常类型可以避免在函数里意外修改参数，该方法通常用于引用参数。此外，在类型参数中添加 const 修饰符还能增加代码可读性，能区分输入和输出参数。"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"常成员"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"常成员"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%B8%B8%E6%88%90%E5%91%98","ariaLabel":"常成员 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"常成员指的是类型中被 const 修饰的成员，常成员可以用来限制对常对象的修改。其中，常成员变量与常量声明相同，而常成员函数声明方法为在成员函数声明的 "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"末尾"}]},{"type":"text","value":"（参数列表的右括号的右边）添加 const 修饰符。"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"常表达式 constexpr（C++11）"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"常表达式-constexprc11"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%B8%B8%E8%A1%A8%E8%BE%BE%E5%BC%8F-constexprc11","ariaLabel":"常表达式 constexprc11 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"constexpr 说明符的作用是声明可以在编译时求得函数或变量的值，它的行为和 C 语言中的 const 关键字是一致的，会将变量结果直接编译到栈空间中。constexpr 还可以用来替换宏定义的常量，规避 "},{"type":"element","tagName":"a","properties":{"href":"./basic.md#define-%E5%91%BD%E4%BB%A4"},"children":[{"type":"text","value":"宏定义的风险"}]},{"type":"text","value":"。constexpr 修饰的是变量和函数，而 const 修饰的是类型。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"实际上把 const 理解成 "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"\"readonly\""}]},{"type":"text","value":"，而把 constexpr 理解成 "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"\"const\""}]},{"type":"text","value":" 更加直观。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"参考资料"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"参考资料"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99","ariaLabel":"参考资料 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://zh.cppreference.com/w/cpp/keyword/const"},"children":[{"type":"text","value":"C++ 关键字——const"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://zh.cppreference.com/w/cpp/keyword/constexpr"},"children":[{"type":"text","value":"C++ 关键字——constexpr"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"style","properties":{},"children":[{"type":"text","value":".anchorLink.before{position:absolute;top:0;left:0;transform:translateX(-100%);padding-right:4px}.anchorLink.after{display:inline-block;padding-left:4px}h1 .anchorLink svg,h2 .anchorLink svg,h3 .anchorLink svg,h4 .anchorLink svg,h5 .anchorLink svg,h6 .anchorLink svg{visibility:hidden}h1 .anchorLink:focus svg,h1:hover .anchorLink svg,h2 .anchorLink:focus svg,h2:hover .anchorLink svg,h3 .anchorLink:focus svg,h3:hover .anchorLink svg,h4 .anchorLink:focus svg,h4:hover .anchorLink svg,h5 .anchorLink:focus svg,h5:hover .anchorLink svg,h6 .anchorLink:focus svg,h6:hover .anchorLink svg{visibility:visible}a.anchor{display:inline-block;position:relative;top:-159px;visibility:hidden}@media only screen and (max-width:1279.95px){a.anchor{top:-101px}}"}]}],"data":{"quirksMode":false}},"headings":[{"value":"常类型<a className=\"anchor\" id=\"常类型\"></a>","depth":2,"id":null},{"value":"常量<a className=\"anchor\" id=\"常量\"></a>","depth":3,"id":null},{"value":"常引用、常指针<a className=\"anchor\" id=\"常引用常指针\"></a>","depth":3,"id":null},{"value":"常参数<a className=\"anchor\" id=\"常参数\"></a>","depth":3,"id":null},{"value":"常成员<a className=\"anchor\" id=\"常成员\"></a>","depth":2,"id":null},{"value":"常表达式 constexpr（C++11）<a className=\"anchor\" id=\"常表达式-constexprc11\"></a>","depth":2,"id":null},{"value":"参考资料<a className=\"anchor\" id=\"参考资料\"></a>","depth":2,"id":null}],"frontmatter":{"author":"Yufan, Sakamoto, Coelacanthus, mgt, Margatroid, Jacob","tags":["lang"],"title":"常值","noMeta":null,"noComment":null,"description":null},"parent":{"relativePath":"lang/const.md","modifiedTime":"2023/02/03","birthTime":"2023-02-03T16:29:10.794Z","changeTime":"2023-02-03T16:29:10.794Z"}}},"pageContext":{"id":"915f9374-a68c-566a-ad62-3d353904ebac","lastModified":"2023-02-01T19:51:11+08:00","next":{"node":{"fields":{"slug":"/math/linear-recurrence/"},"id":"b41f6f1b-0826-5124-8826-e449ef765d26","frontmatter":{"tags":["math"],"title":"常系数齐次线性递推"},"fileAbsolutePath":"/home/runner/work/oiwiki-bootstrap/oiwiki-bootstrap/cauldron/docs/math/linear-recurrence.md"}}}},
    "staticQueryHashes": ["2462162885","2862490856","3656965534"]}