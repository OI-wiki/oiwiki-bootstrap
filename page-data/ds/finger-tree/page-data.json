{
    "componentChunkName": "component---node-modules-gatsby-theme-oi-wiki-src-templates-doc-js",
    "path": "/ds/finger-tree/",
    "result": {"data":{"mdx":{"id":"d4982618-4f8a-5c5a-b68e-a61f48491a2f","wordCount":{"words":393},"fields":{"slug":"/ds/finger-tree/","isIndex":false},"excerpt":"注意 此章是选读内容，在阅读前请确定你对函数式编程（Functional Programming）有一定了解。 简介 手指树（Finger Tree）是一种 纯函数式 数据结构，由 Ralf Hinze 和 Ross Paterson…","htmlAst":{"type":"root","children":[{"type":"element","tagName":"details","properties":{"className":["warning"],"open":"true"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"注意"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"此章是选读内容，在阅读前请确定你对函数式编程（Functional Programming）有一定了解。"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"简介"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"简介"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E7%AE%80%E4%BB%8B","ariaLabel":"简介 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"手指树"}]},{"type":"text","value":"（Finger Tree）是一种 "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"纯函数式"}]},{"type":"text","value":" 数据结构，由 Ralf Hinze 和 Ross Paterson 提出。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"为什么需要手指树"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"为什么需要手指树"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E4%B8%BA%E4%BB%80%E4%B9%88%E9%9C%80%E8%A6%81%E6%89%8B%E6%8C%87%E6%A0%91","ariaLabel":"为什么需要手指树 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在函数式编程中，列表是十分常见的数据类型。对于基于序列的操作，包括在两端添加和删除元素（双端队列操作），在任意节点插入、连接、删除，查找某个满足要求的元素，将序列拆分为子序列，几乎所有的函数型语言都支持。但是对于高效的更多操作，这些语言很难做到。即使有相对应的实现，通常也都非常复杂，实际很难使用。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"而指状树提供了一种纯函数式的序列数据结构，它可以在均摊常量时间（amortized constant time）内完成访问，添加到序列的前端和末尾等操作，以及在对数时间（logarithmic time）内完成串联和随机访问。除了良好的渐近运行时边界外，手指树还非常灵活：当与元素上的幺半群标记（"},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Monoidal_category"},"children":[{"type":"text","value":"monoidal tag"}]},{"type":"text","value":"）结合时，指状树可用于实现高效的随机访问序列、有序序列、间隔树和优先级队列。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"基本结构"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"基本结构"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84","ariaLabel":"基本结构 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"手指树在树的“手指”（叶子）的地方存储数据，访问时间为分摊常量。手指是一个可以访问部分数据结构的点。在命令式语言（imperative language）中，这被称做指针。在手指树中，“手指”是指向序列末端或叶节点的结构。手指树还在每个内部节点中存储对其后代应用一些关联操作的结果。存储在内部节点中的数据可用于提供除树类数据结构之外的功能。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"手指树的深度由下到上计算。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"手指树的第一级，即树的叶节点，仅包含值，深度为 "},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"mjx-container","properties":{"className":["MathJax"],"jax":"CHTML"},"children":[{"type":"element","tagName":"mjx-math","properties":{"className":["MJX-TEX"]},"children":[{"type":"element","tagName":"mjx-mn","properties":{"className":["mjx-n"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c30"]},"children":[]}]}]}]}]},{"type":"text","value":"。第二级为深度 "},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"mjx-container","properties":{"className":["MathJax"],"jax":"CHTML"},"children":[{"type":"element","tagName":"mjx-math","properties":{"className":["MJX-TEX"]},"children":[{"type":"element","tagName":"mjx-mn","properties":{"className":["mjx-n"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c31"]},"children":[]}]}]}]}]},{"type":"text","value":"。第三级为深度 "},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"mjx-container","properties":{"className":["MathJax"],"jax":"CHTML"},"children":[{"type":"element","tagName":"mjx-math","properties":{"className":["MJX-TEX"]},"children":[{"type":"element","tagName":"mjx-mn","properties":{"className":["mjx-n"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c32"]},"children":[]}]}]}]}]},{"type":"text","value":"，依此类推。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"离根越近，节点指向的原始树（在它是手指树之前的树）的子树越深。这样，沿着树向下工作就是从叶子到树的根，这与典型的树数据结构相反。为了获得这种的结构，我们必须确保原始树具有统一的深度。在声明节点对象时，必须通过子节点的类型进行参数化。深度为 "},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"mjx-container","properties":{"className":["MathJax"],"jax":"CHTML"},"children":[{"type":"element","tagName":"mjx-math","properties":{"className":["MJX-TEX"]},"children":[{"type":"element","tagName":"mjx-mn","properties":{"className":["mjx-n"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c31"]},"children":[]}]}]}]}]},{"type":"text","value":" 及以上的脊椎上的节点指向树，通过这种参数化，它们可以由嵌套节点表示。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"将一棵树变成手指树"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"将一棵树变成手指树"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%B0%86%E4%B8%80%E6%A3%B5%E6%A0%91%E5%8F%98%E6%88%90%E6%89%8B%E6%8C%87%E6%A0%91","ariaLabel":"将一棵树变成手指树 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"details","properties":{"className":["note"],"open":"true"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"注释"}]},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"2-3 树"}]},{"type":"text","value":" 是一种树状数据结构，其中每个带有子节点（内部节点）的节点具有两个子节点（"},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"mjx-container","properties":{"className":["MathJax"],"jax":"CHTML"},"children":[{"type":"element","tagName":"mjx-math","properties":{"className":["MJX-TEX"]},"children":[{"type":"element","tagName":"mjx-mn","properties":{"className":["mjx-n"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c32"]},"children":[]}]}]}]}]},{"type":"text","value":" 节点）和一个数据元素或三个子节点（"},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"mjx-container","properties":{"className":["MathJax"],"jax":"CHTML"},"children":[{"type":"element","tagName":"mjx-math","properties":{"className":["MJX-TEX"]},"children":[{"type":"element","tagName":"mjx-mn","properties":{"className":["mjx-n"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c33"]},"children":[]}]}]}]}]},{"type":"text","value":" 节点）和两个数据元素。2-3 树是 "},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"mjx-container","properties":{"className":["MathJax"],"jax":"CHTML"},"children":[{"type":"element","tagName":"mjx-math","properties":{"className":["MJX-TEX"]},"children":[{"type":"element","tagName":"mjx-mn","properties":{"className":["mjx-n"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c33"]},"children":[]}]}]}]}]},{"type":"text","value":" 阶 B 树。树外部的节点（叶节点）没有子节点和一两个数据元素。"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我们将从平衡 2-3 树开始这个过程。为了使手指树正常工作，所有的叶节点需要是水平的。如下图所示（图片取自手指树论文）："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/d703e3e0e4a6da8a52dc9248966ab42c/finger-tree-1.png","alt":""},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"手指是“一种结构，可以有效地访问靠近特定位置的树的节点。”要制作手指树，我们需要将手指放在树的左右两端，取树的最左边和最右边的内部节点并将它们拉起来，使树的其余部分悬在它们之间，这为我们提供了对序列末尾的均摊常量访问时间。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/2b7a4ffd7a64c145d03a8bd30daddfa9/finger-tree-2.png","alt":""},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这种新的数据结构被称为手指树。手指树由沿其树脊（棕色线）分布的几层（下方蓝色框）组成："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/e8dab8a3a20bbb2a7d886c2218531c04/finger-tree-3.png","alt":""},"children":[]}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"示例中的数字是带有字母的节点。每个列表由树脊上每个节点的前缀或后缀划分。在转换后的 2-3 树中，顶层的数字列表似乎可以有两个或三个长度，而较低级别的长度只有一或两个。为了使手指树的某些应用程序能够如此高效地运行，手指树允许在每个级别上有 "},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"mjx-container","properties":{"className":["MathJax"],"jax":"CHTML"},"children":[{"type":"element","tagName":"mjx-math","properties":{"className":["MJX-TEX"]},"children":[{"type":"element","tagName":"mjx-mn","properties":{"className":["mjx-n"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c31"]},"children":[]}]}]}]}]},{"type":"text","value":" 到 "},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"mjx-container","properties":{"className":["MathJax"],"jax":"CHTML"},"children":[{"type":"element","tagName":"mjx-math","properties":{"className":["MJX-TEX"]},"children":[{"type":"element","tagName":"mjx-mn","properties":{"className":["mjx-n"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c34"]},"children":[]}]}]}]}]},{"type":"text","value":" 个子树。手指树的数字可以转换成一个列表，如："}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"顶层具有类型 "},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"mjx-container","properties":{"className":["MathJax"],"jax":"CHTML"},"children":[{"type":"element","tagName":"mjx-math","properties":{"className":["MJX-TEX"]},"children":[{"type":"element","tagName":"mjx-mi","properties":{"className":["mjx-i"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c1D44E","TEX-I"]},"children":[]}]}]}]}]},{"type":"text","value":" 的元素，下一层具有类型节点 "},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"mjx-container","properties":{"className":["MathJax"],"jax":"CHTML"},"children":[{"type":"element","tagName":"mjx-math","properties":{"className":["MJX-TEX"]},"children":[{"type":"element","tagName":"mjx-mi","properties":{"className":["mjx-i"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c1D44E","TEX-I"]},"children":[]}]}]}]}]},{"type":"text","value":" 的元素，因为树脊和叶子之间的节点，这通常意味着树的第 "},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"mjx-container","properties":{"className":["MathJax"],"jax":"CHTML"},"children":[{"type":"element","tagName":"mjx-math","properties":{"className":["MJX-TEX"]},"children":[{"type":"element","tagName":"mjx-mi","properties":{"className":["mjx-i"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c1D45B","TEX-I"]},"children":[]}]}]}]}]},{"type":"text","value":" 层具有元素类型为 "},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"mjx-container","properties":{"className":["MathJax"],"jax":"CHTML"},"children":[{"type":"element","tagName":"mjx-math","properties":{"className":["MJX-TEX"]},"children":[{"type":"element","tagName":"mjx-mi","properties":{"className":["mjx-i"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c1D441","TEX-I"]},"children":[]}]},{"type":"element","tagName":"mjx-mi","properties":{"className":["mjx-i"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c1D45C","TEX-I"]},"children":[]}]},{"type":"element","tagName":"mjx-mi","properties":{"className":["mjx-i"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c1D451","TEX-I"]},"children":[]}]},{"type":"element","tagName":"mjx-msup","properties":{},"children":[{"type":"element","tagName":"mjx-mi","properties":{"className":["mjx-i"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c1D452","TEX-I"]},"children":[]}]},{"type":"element","tagName":"mjx-script","properties":{"style":"vertical-align: 0.363em;"},"children":[{"type":"element","tagName":"mjx-texatom","properties":{"size":"s","texclass":"ORD"},"children":[{"type":"element","tagName":"mjx-mi","properties":{"className":["mjx-i"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c1D45B","TEX-I"]},"children":[]}]}]}]}]}]}]}]},{"type":"text","value":" "},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"mjx-container","properties":{"className":["MathJax"],"jax":"CHTML"},"children":[{"type":"element","tagName":"mjx-math","properties":{"className":["MJX-TEX"]},"children":[{"type":"element","tagName":"mjx-mi","properties":{"className":["mjx-i"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c1D44E","TEX-I"]},"children":[]}]}]}]}]},{"type":"text","value":"，或 2-3 个深度为 "},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"mjx-container","properties":{"className":["MathJax"],"jax":"CHTML"},"children":[{"type":"element","tagName":"mjx-math","properties":{"className":["MJX-TEX"]},"children":[{"type":"element","tagName":"mjx-mi","properties":{"className":["mjx-i"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c1D45B","TEX-I"]},"children":[]}]}]}]}]},{"type":"text","value":" 的树。这意味着 "},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"mjx-container","properties":{"className":["MathJax"],"jax":"CHTML"},"children":[{"type":"element","tagName":"mjx-math","properties":{"className":["MJX-TEX"]},"children":[{"type":"element","tagName":"mjx-mi","properties":{"className":["mjx-i"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c1D45B","TEX-I"]},"children":[]}]}]}]}]},{"type":"text","value":" 个元素的序列由深度为 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Θ(log n)"}]},{"type":"text","value":" 的树表示。距离最近端 "},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"mjx-container","properties":{"className":["MathJax"],"jax":"CHTML"},"children":[{"type":"element","tagName":"mjx-math","properties":{"className":["MJX-TEX"]},"children":[{"type":"element","tagName":"mjx-mi","properties":{"className":["mjx-i"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c1D451","TEX-I"]},"children":[]}]}]}]}]},{"type":"text","value":" 的元素存储在树中 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Θ(log d)"}]},{"type":"text","value":" 深度处。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"双向队列操作"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"双向队列操作"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%8F%8C%E5%90%91%E9%98%9F%E5%88%97%E6%93%8D%E4%BD%9C","ariaLabel":"双向队列操作 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"指状树也可以制作高效的双向队列。无论结构是否持久，所有操作都需要 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Θ(1)"}]},{"type":"text","value":" 时间。它可以被看作是的隐式双端队列的扩展[3]："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"用 2-3 个节点替换对提供了足够的灵活性来支持有效的串联。（为了保持恒定时间的双端队列操作，必须将 Digit 扩展为四。）"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"用幺半群（monoid）注释内部节点允许有效的分裂。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"时间复杂度"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"时间复杂度"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6","ariaLabel":"时间复杂度 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"手指树提供了对树的“手指”（叶子）的分摊常量时间访问，这是存储数据的地方，以及在较小部分的大小中连接和拆分对数时间。它还在每个内部节点中存储对其后代应用一些关联操作的结果。存储在内部节点中的“摘要”数据可用于提供除树之外的数据结构的功能。"}]},{"type":"text","value":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"type":"element","tagName":"table","properties":{},"children":[{"type":"element","tagName":"thead","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"操作"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"手指树"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"注释 2-3 树 (annotated 2-3 tree)"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"列表（list)"}]},{"type":"element","tagName":"th","properties":{},"children":[{"type":"text","value":"向量（vector)"}]}]}]},{"type":"element","tagName":"tbody","properties":{},"children":[{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}]},{"type":"text","value":","},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"snoc"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(1)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(logn)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(1)/O(n)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(n)"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"viewl"}]},{"type":"text","value":","},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"viewr"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(1)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(logn)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(1)/O(n)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(1)"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"measure"}]},{"type":"text","value":"/"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"length"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(1)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(1)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(n)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(1)"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"append"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(log min(l1, l2))"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(logn)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(n)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(m+n)"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"split"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(log min(n, l-n))"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(logn)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(n)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(1)"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"replicate"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(log n)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(logn)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(n)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(n)"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fromList"}]},{"type":"text","value":","},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"toList"}]},{"type":"text","value":","},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"reverse"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(l)/O(l)/O(l)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(l)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(1)/O(1)/O(n)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(n)"}]}]},{"type":"element","tagName":"tr","properties":{},"children":[{"type":"element","tagName":"td","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"index"}]}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(log min(n, l-n))"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(logn)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(n)"}]},{"type":"element","tagName":"td","properties":{},"children":[{"type":"text","value":"O(1)"}]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"应用"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"应用"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%BA%94%E7%94%A8","ariaLabel":"应用 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"指状树可用于建造其他树。例如，优先级队列可以通过树中子节点的最小优先级标记内部节点来实现，或者索引列表/数组可以通过节点的子节点中叶子的计数来标记节点来实现。其他应用包括随机访问序列（如下所述）、有序序列和区间树。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"手指树可以提供平均 "},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"mjx-container","properties":{"className":["MathJax"],"jax":"CHTML"},"children":[{"type":"element","tagName":"mjx-math","properties":{"className":["MJX-TEX"]},"children":[{"type":"element","tagName":"mjx-mi","properties":{"className":["mjx-i"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c1D442","TEX-I"]},"children":[]}]},{"type":"element","tagName":"mjx-mo","properties":{"className":["mjx-n"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c28"]},"children":[]}]},{"type":"element","tagName":"mjx-mn","properties":{"className":["mjx-n"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c31"]},"children":[]}]},{"type":"element","tagName":"mjx-mo","properties":{"className":["mjx-n"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c29"]},"children":[]}]}]}]}]},{"type":"text","value":" 的推、反转、弹出，"},{"type":"element","tagName":"span","properties":{"className":["math","math-inline"]},"children":[{"type":"element","tagName":"mjx-container","properties":{"className":["MathJax"],"jax":"CHTML"},"children":[{"type":"element","tagName":"mjx-math","properties":{"className":["MJX-TEX"]},"children":[{"type":"element","tagName":"mjx-mi","properties":{"className":["mjx-i"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c1D442","TEX-I"]},"children":[]}]},{"type":"element","tagName":"mjx-mo","properties":{"className":["mjx-n"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c28"]},"children":[]}]},{"type":"element","tagName":"mjx-mi","properties":{"className":["mjx-n"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c6C"]},"children":[]},{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c6F"]},"children":[]},{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c67"]},"children":[]}]},{"type":"element","tagName":"mjx-mo","properties":{"className":["mjx-n"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c2061"]},"children":[]}]},{"type":"element","tagName":"mjx-mi","properties":{"className":["mjx-i"],"space":"2"},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c1D45B","TEX-I"]},"children":[]}]},{"type":"element","tagName":"mjx-mo","properties":{"className":["mjx-n"]},"children":[{"type":"element","tagName":"mjx-c","properties":{"className":["mjx-c29"]},"children":[]}]}]}]}]},{"type":"text","value":" 追加和拆分；并且可以适应索引或排序序列。和所有函数式数据结构一样，它本质上是持久的；也就是说，始终保留旧版本的树。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"对于代码实现，Haskell 核心库中的有限序列 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Seq"}]},{"type":"text","value":" 的实现使用了 2-3 手指树（"},{"type":"element","tagName":"a","properties":{"href":"https://hackage.haskell.org/package/containers-0.6.5.1/docs/Data-Sequence.html"},"children":[{"type":"text","value":"Data.Sequence"}]},{"type":"text","value":"），OCaml 中 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"BatFingerTree"}]},{"type":"text","value":" 模块的 "},{"type":"element","tagName":"a","properties":{"href":"https://ocaml-batteries-team.github.io/batteries-included/hdoc2/BatFingerTree.html"},"children":[{"type":"text","value":"实现"}]},{"type":"text","value":" 也使用了通用手指树数据结构。手指树可以使用或不使用惰性求值来实现，但惰性允许更简单的实现。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"参考资料与拓展阅读"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"参考资料与拓展阅读"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99%E4%B8%8E%E6%8B%93%E5%B1%95%E9%98%85%E8%AF%BB","ariaLabel":"参考资料与拓展阅读 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"[1]Ralf Hinze and Ross Paterson, \""},{"type":"element","tagName":"a","properties":{"href":"http://www.staff.city.ac.uk/~ross/papers/FingerTree.html"},"children":[{"type":"text","value":"Finger trees: a simple general-purpose data structure"}]},{"type":"text","value":"\", Journal of Functional Programming 16:2 (2006) pp 197-217."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"[2]"},{"type":"element","tagName":"a","properties":{"href":"https://en.wikipedia.org/wiki/Finger_tree"},"children":[{"type":"text","value":"Finger Tree - Wikipedia"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"[3]"},{"type":"element","tagName":"a","properties":{"href":"https://www.cambridge.org/us/academic/subjects/computer-science/programming-languages-and-applied-logic/purely-functional-data-structures"},"children":[{"type":"text","value":"Purely Functional Data Structures"}]},{"type":"text","value":", Chris Okasaki (1999)"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"style","properties":{},"children":[{"type":"text","value":".anchorLink.before{position:absolute;top:0;left:0;transform:translateX(-100%);padding-right:4px}.anchorLink.after{display:inline-block;padding-left:4px}h1 .anchorLink svg,h2 .anchorLink svg,h3 .anchorLink svg,h4 .anchorLink svg,h5 .anchorLink svg,h6 .anchorLink svg{visibility:hidden}h1 .anchorLink:focus svg,h1:hover .anchorLink svg,h2 .anchorLink:focus svg,h2:hover .anchorLink svg,h3 .anchorLink:focus svg,h3:hover .anchorLink svg,h4 .anchorLink:focus svg,h4:hover .anchorLink svg,h5 .anchorLink:focus svg,h5:hover .anchorLink svg,h6 .anchorLink:focus svg,h6:hover .anchorLink svg{visibility:visible}a.anchor{display:inline-block;position:relative;top:-159px;visibility:hidden}@media only screen and (max-width:1279.95px){a.anchor{top:-101px}}"}]},{"type":"element","tagName":"style","properties":{},"children":[{"type":"text","value":"\nmjx-container[jax=\"CHTML\"] {\n  line-height: 0;\n}\n\nmjx-container [space=\"1\"] {\n  margin-left: .111em;\n}\n\nmjx-container [space=\"2\"] {\n  margin-left: .167em;\n}\n\nmjx-container [space=\"3\"] {\n  margin-left: .222em;\n}\n\nmjx-container [space=\"4\"] {\n  margin-left: .278em;\n}\n\nmjx-container [space=\"5\"] {\n  margin-left: .333em;\n}\n\nmjx-container [rspace=\"1\"] {\n  margin-right: .111em;\n}\n\nmjx-container [rspace=\"2\"] {\n  margin-right: .167em;\n}\n\nmjx-container [rspace=\"3\"] {\n  margin-right: .222em;\n}\n\nmjx-container [rspace=\"4\"] {\n  margin-right: .278em;\n}\n\nmjx-container [rspace=\"5\"] {\n  margin-right: .333em;\n}\n\nmjx-container [size=\"s\"] {\n  font-size: 70.7%;\n}\n\nmjx-container [size=\"ss\"] {\n  font-size: 50%;\n}\n\nmjx-container [size=\"Tn\"] {\n  font-size: 60%;\n}\n\nmjx-container [size=\"sm\"] {\n  font-size: 85%;\n}\n\nmjx-container [size=\"lg\"] {\n  font-size: 120%;\n}\n\nmjx-container [size=\"Lg\"] {\n  font-size: 144%;\n}\n\nmjx-container [size=\"LG\"] {\n  font-size: 173%;\n}\n\nmjx-container [size=\"hg\"] {\n  font-size: 207%;\n}\n\nmjx-container [size=\"HG\"] {\n  font-size: 249%;\n}\n\nmjx-container [width=\"full\"] {\n  width: 100%;\n}\n\nmjx-box {\n  display: inline-block;\n}\n\nmjx-block {\n  display: block;\n}\n\nmjx-itable {\n  display: inline-table;\n}\n\nmjx-row {\n  display: table-row;\n}\n\nmjx-row > * {\n  display: table-cell;\n}\n\nmjx-mtext {\n  display: inline-block;\n}\n\nmjx-mstyle {\n  display: inline-block;\n}\n\nmjx-merror {\n  display: inline-block;\n  color: red;\n  background-color: yellow;\n}\n\nmjx-mphantom {\n  visibility: hidden;\n}\n\n_::-webkit-full-page-media, _:future, :root mjx-container {\n  will-change: opacity;\n}\n\nmjx-math {\n  display: inline-block;\n  text-align: left;\n  line-height: 0;\n  text-indent: 0;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 100%;\n  font-size-adjust: none;\n  letter-spacing: normal;\n  border-collapse: collapse;\n  word-wrap: normal;\n  word-spacing: normal;\n  white-space: nowrap;\n  direction: ltr;\n  padding: 1px 0;\n}\n\nmjx-container[jax=\"CHTML\"][display=\"true\"] {\n  display: block;\n  text-align: center;\n  margin: 1em 0;\n}\n\nmjx-container[jax=\"CHTML\"][display=\"true\"][width=\"full\"] {\n  display: flex;\n}\n\nmjx-container[jax=\"CHTML\"][display=\"true\"] mjx-math {\n  padding: 0;\n}\n\nmjx-container[jax=\"CHTML\"][justify=\"left\"] {\n  text-align: left;\n}\n\nmjx-container[jax=\"CHTML\"][justify=\"right\"] {\n  text-align: right;\n}\n\nmjx-mn {\n  display: inline-block;\n  text-align: left;\n}\n\nmjx-c {\n  display: inline-block;\n}\n\nmjx-utext {\n  display: inline-block;\n  padding: .75em 0 .2em 0;\n}\n\nmjx-mi {\n  display: inline-block;\n  text-align: left;\n}\n\nmjx-msup {\n  display: inline-block;\n  text-align: left;\n}\n\nmjx-TeXAtom {\n  display: inline-block;\n  text-align: left;\n}\n\nmjx-mo {\n  display: inline-block;\n  text-align: left;\n}\n\nmjx-stretchy-h {\n  display: inline-table;\n  width: 100%;\n}\n\nmjx-stretchy-h > * {\n  display: table-cell;\n  width: 0;\n}\n\nmjx-stretchy-h > * > mjx-c {\n  display: inline-block;\n  transform: scalex(1.0000001);\n}\n\nmjx-stretchy-h > * > mjx-c::before {\n  display: inline-block;\n  width: initial;\n}\n\nmjx-stretchy-h > mjx-ext {\n  /* IE */ overflow: hidden;\n  /* others */ overflow: clip visible;\n  width: 100%;\n}\n\nmjx-stretchy-h > mjx-ext > mjx-c::before {\n  transform: scalex(500);\n}\n\nmjx-stretchy-h > mjx-ext > mjx-c {\n  width: 0;\n}\n\nmjx-stretchy-h > mjx-beg > mjx-c {\n  margin-right: -.1em;\n}\n\nmjx-stretchy-h > mjx-end > mjx-c {\n  margin-left: -.1em;\n}\n\nmjx-stretchy-v {\n  display: inline-block;\n}\n\nmjx-stretchy-v > * {\n  display: block;\n}\n\nmjx-stretchy-v > mjx-beg {\n  height: 0;\n}\n\nmjx-stretchy-v > mjx-end > mjx-c {\n  display: block;\n}\n\nmjx-stretchy-v > * > mjx-c {\n  transform: scaley(1.0000001);\n  transform-origin: left center;\n  overflow: hidden;\n}\n\nmjx-stretchy-v > mjx-ext {\n  display: block;\n  height: 100%;\n  box-sizing: border-box;\n  border: 0px solid transparent;\n  /* IE */ overflow: hidden;\n  /* others */ overflow: visible clip;\n}\n\nmjx-stretchy-v > mjx-ext > mjx-c::before {\n  width: initial;\n  box-sizing: border-box;\n}\n\nmjx-stretchy-v > mjx-ext > mjx-c {\n  transform: scaleY(500) translateY(.075em);\n  overflow: visible;\n}\n\nmjx-mark {\n  display: inline-block;\n  height: 0px;\n}\n\nmjx-c::before {\n  display: block;\n  width: 0;\n}\n\n.MJX-TEX {\n  font-family: MJXZERO, MJXTEX;\n}\n\n.TEX-B {\n  font-family: MJXZERO, MJXTEX-B;\n}\n\n.TEX-I {\n  font-family: MJXZERO, MJXTEX-I;\n}\n\n.TEX-MI {\n  font-family: MJXZERO, MJXTEX-MI;\n}\n\n.TEX-BI {\n  font-family: MJXZERO, MJXTEX-BI;\n}\n\n.TEX-S1 {\n  font-family: MJXZERO, MJXTEX-S1;\n}\n\n.TEX-S2 {\n  font-family: MJXZERO, MJXTEX-S2;\n}\n\n.TEX-S3 {\n  font-family: MJXZERO, MJXTEX-S3;\n}\n\n.TEX-S4 {\n  font-family: MJXZERO, MJXTEX-S4;\n}\n\n.TEX-A {\n  font-family: MJXZERO, MJXTEX-A;\n}\n\n.TEX-C {\n  font-family: MJXZERO, MJXTEX-C;\n}\n\n.TEX-CB {\n  font-family: MJXZERO, MJXTEX-CB;\n}\n\n.TEX-FR {\n  font-family: MJXZERO, MJXTEX-FR;\n}\n\n.TEX-FRB {\n  font-family: MJXZERO, MJXTEX-FRB;\n}\n\n.TEX-SS {\n  font-family: MJXZERO, MJXTEX-SS;\n}\n\n.TEX-SSB {\n  font-family: MJXZERO, MJXTEX-SSB;\n}\n\n.TEX-SSI {\n  font-family: MJXZERO, MJXTEX-SSI;\n}\n\n.TEX-SC {\n  font-family: MJXZERO, MJXTEX-SC;\n}\n\n.TEX-T {\n  font-family: MJXZERO, MJXTEX-T;\n}\n\n.TEX-V {\n  font-family: MJXZERO, MJXTEX-V;\n}\n\n.TEX-VB {\n  font-family: MJXZERO, MJXTEX-VB;\n}\n\nmjx-stretchy-v mjx-c, mjx-stretchy-h mjx-c {\n  font-family: MJXZERO, MJXTEX-S1, MJXTEX-S4, MJXTEX, MJXTEX-A ! important;\n}\n\n@font-face /* 0 */ {\n  font-family: MJXZERO;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_Zero.woff\") format(\"woff\");\n}\n\n@font-face /* 1 */ {\n  font-family: MJXTEX;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_Main-Regular.woff\") format(\"woff\");\n}\n\n@font-face /* 2 */ {\n  font-family: MJXTEX-B;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_Main-Bold.woff\") format(\"woff\");\n}\n\n@font-face /* 3 */ {\n  font-family: MJXTEX-I;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_Math-Italic.woff\") format(\"woff\");\n}\n\n@font-face /* 4 */ {\n  font-family: MJXTEX-MI;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_Main-Italic.woff\") format(\"woff\");\n}\n\n@font-face /* 5 */ {\n  font-family: MJXTEX-BI;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_Math-BoldItalic.woff\") format(\"woff\");\n}\n\n@font-face /* 6 */ {\n  font-family: MJXTEX-S1;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_Size1-Regular.woff\") format(\"woff\");\n}\n\n@font-face /* 7 */ {\n  font-family: MJXTEX-S2;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_Size2-Regular.woff\") format(\"woff\");\n}\n\n@font-face /* 8 */ {\n  font-family: MJXTEX-S3;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_Size3-Regular.woff\") format(\"woff\");\n}\n\n@font-face /* 9 */ {\n  font-family: MJXTEX-S4;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_Size4-Regular.woff\") format(\"woff\");\n}\n\n@font-face /* 10 */ {\n  font-family: MJXTEX-A;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_AMS-Regular.woff\") format(\"woff\");\n}\n\n@font-face /* 11 */ {\n  font-family: MJXTEX-C;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_Calligraphic-Regular.woff\") format(\"woff\");\n}\n\n@font-face /* 12 */ {\n  font-family: MJXTEX-CB;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_Calligraphic-Bold.woff\") format(\"woff\");\n}\n\n@font-face /* 13 */ {\n  font-family: MJXTEX-FR;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_Fraktur-Regular.woff\") format(\"woff\");\n}\n\n@font-face /* 14 */ {\n  font-family: MJXTEX-FRB;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_Fraktur-Bold.woff\") format(\"woff\");\n}\n\n@font-face /* 15 */ {\n  font-family: MJXTEX-SS;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_SansSerif-Regular.woff\") format(\"woff\");\n}\n\n@font-face /* 16 */ {\n  font-family: MJXTEX-SSB;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_SansSerif-Bold.woff\") format(\"woff\");\n}\n\n@font-face /* 17 */ {\n  font-family: MJXTEX-SSI;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_SansSerif-Italic.woff\") format(\"woff\");\n}\n\n@font-face /* 18 */ {\n  font-family: MJXTEX-SC;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_Script-Regular.woff\") format(\"woff\");\n}\n\n@font-face /* 19 */ {\n  font-family: MJXTEX-T;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_Typewriter-Regular.woff\") format(\"woff\");\n}\n\n@font-face /* 20 */ {\n  font-family: MJXTEX-V;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_Vector-Regular.woff\") format(\"woff\");\n}\n\n@font-face /* 21 */ {\n  font-family: MJXTEX-VB;\n  src: url(\"https://cdn.jsdelivr.net/npm/mathjax@3.0.5/es5/output/chtml/fonts/woff-v2/MathJax_Vector-Bold.woff\") format(\"woff\");\n}\n\nmjx-c.mjx-c30::before {\n  padding: 0.666em 0.5em 0.022em 0;\n  content: \"0\";\n}\n\nmjx-c.mjx-c31::before {\n  padding: 0.666em 0.5em 0 0;\n  content: \"1\";\n}\n\nmjx-c.mjx-c32::before {\n  padding: 0.666em 0.5em 0 0;\n  content: \"2\";\n}\n\nmjx-c.mjx-c33::before {\n  padding: 0.665em 0.5em 0.022em 0;\n  content: \"3\";\n}\n\nmjx-c.mjx-c34::before {\n  padding: 0.677em 0.5em 0 0;\n  content: \"4\";\n}\n\nmjx-c.mjx-c1D44E.TEX-I::before {\n  padding: 0.441em 0.529em 0.01em 0;\n  content: \"a\";\n}\n\nmjx-c.mjx-c1D45B.TEX-I::before {\n  padding: 0.442em 0.6em 0.011em 0;\n  content: \"n\";\n}\n\nmjx-c.mjx-c1D441.TEX-I::before {\n  padding: 0.683em 0.888em 0 0;\n  content: \"N\";\n}\n\nmjx-c.mjx-c1D45C.TEX-I::before {\n  padding: 0.441em 0.485em 0.011em 0;\n  content: \"o\";\n}\n\nmjx-c.mjx-c1D451.TEX-I::before {\n  padding: 0.694em 0.52em 0.01em 0;\n  content: \"d\";\n}\n\nmjx-c.mjx-c1D452.TEX-I::before {\n  padding: 0.442em 0.466em 0.011em 0;\n  content: \"e\";\n}\n\nmjx-c.mjx-c1D442.TEX-I::before {\n  padding: 0.704em 0.763em 0.022em 0;\n  content: \"O\";\n}\n\nmjx-c.mjx-c28::before {\n  padding: 0.75em 0.389em 0.25em 0;\n  content: \"(\";\n}\n\nmjx-c.mjx-c29::before {\n  padding: 0.75em 0.389em 0.25em 0;\n  content: \")\";\n}\n\nmjx-c.mjx-c6C::before {\n  padding: 0.694em 0.278em 0 0;\n  content: \"l\";\n}\n\nmjx-c.mjx-c6F::before {\n  padding: 0.448em 0.5em 0.01em 0;\n  content: \"o\";\n}\n\nmjx-c.mjx-c67::before {\n  padding: 0.453em 0.5em 0.206em 0;\n  content: \"g\";\n}\n\nmjx-c.mjx-c2061::before {\n  padding: 0 0 0 0;\n  content: \"\";\n}\n"}]}],"data":{"quirksMode":false}},"headings":[{"value":"简介<a className=\"anchor\" id=\"简介\"></a>","depth":2,"id":null},{"value":"为什么需要手指树<a className=\"anchor\" id=\"为什么需要手指树\"></a>","depth":2,"id":null},{"value":"基本结构<a className=\"anchor\" id=\"基本结构\"></a>","depth":2,"id":null},{"value":"将一棵树变成手指树<a className=\"anchor\" id=\"将一棵树变成手指树\"></a>","depth":3,"id":null},{"value":"双向队列操作<a className=\"anchor\" id=\"双向队列操作\"></a>","depth":3,"id":null},{"value":"时间复杂度<a className=\"anchor\" id=\"时间复杂度\"></a>","depth":2,"id":null},{"value":"应用<a className=\"anchor\" id=\"应用\"></a>","depth":2,"id":null},{"value":"参考资料与拓展阅读<a className=\"anchor\" id=\"参考资料与拓展阅读\"></a>","depth":2,"id":null}],"frontmatter":{"author":"Imple, mgt, Danni","tags":["ds"],"title":"手指树","noMeta":null,"noComment":null,"description":null},"parent":{"relativePath":"ds/finger-tree.md","modifiedTime":"2023/02/03","birthTime":"2023-02-03T16:29:10.742Z","changeTime":"2023-02-03T16:29:10.742Z"}}},"pageContext":{"id":"d4982618-4f8a-5c5a-b68e-a61f48491a2f","lastModified":"2022-12-22T10:51:13+08:00","next":{"node":{"fields":{"slug":"/geometry/scanning/"},"id":"b5b8eae1-03c0-50be-9f4a-dbcf073b0cc6","frontmatter":{"tags":["geometry"],"title":"扫描线"},"fileAbsolutePath":"/home/runner/work/oiwiki-bootstrap/oiwiki-bootstrap/cauldron/docs/geometry/scanning.md"}}}},
    "staticQueryHashes": ["2462162885","2862490856","3656965534"]}