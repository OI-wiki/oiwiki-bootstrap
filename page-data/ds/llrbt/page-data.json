{
    "componentChunkName": "component---node-modules-gatsby-theme-oi-wiki-src-templates-doc-js",
    "path": "/ds/llrbt/",
    "result": {"data":{"mdx":{"id":"24338c0b-091e-51bf-87eb-e8e6acc04b10","wordCount":{"words":203},"fields":{"slug":"/ds/llrbt/","isIndex":false},"excerpt":"左偏红黑树是红黑树的一种变体，它的对红边（点）的位置做了一定限制，使得其插入与删除操作可以与 2-…","htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"左偏红黑树是红黑树的一种变体，它的对红边（点）的位置做了一定限制，使得其插入与删除操作可以与 2-3 树构成一一对应。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我们假设读者已经至少掌握了一种基于旋转的平衡树，因此本文不会对旋转操作进行讲解。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"红黑树"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"红黑树"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E7%BA%A2%E9%BB%91%E6%A0%91","ariaLabel":"红黑树 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"性质"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"性质"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E6%80%A7%E8%B4%A8","ariaLabel":"性质 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"一棵红黑树满足如下性质："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"节点是红色或黑色；"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"红色的节点的所有儿子的颜色必须是黑色，即从每个叶子到根的所有路径上不能有两个连续的红色节点；"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"从任一节点到其子树中的每个叶子的所有简单路径上都包含相同数目的黑色节点。（黑高平衡）"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这保证了从根节点到任意叶子的最长路径（红黑交替）不会超过最短路径（全黑）的二倍。从而保证了树的平衡性。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"维护这些性质是比较复杂的，如果我们要插入一个节点，首先，它一定会被染色成红色，否则会破坏性质 3。即使这样，我们还是有可能会破坏性质 2。因此需要进行调整。而删除节点就更加麻烦，与插入类似，我们不能删除黑色节点，否则会破坏黑高的平衡。如何方便地解决这些问题呢？"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"左偏红黑树（Left Leaning Red Black Tree）"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"左偏红黑树left-leaning-red-black-tree"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%B7%A6%E5%81%8F%E7%BA%A2%E9%BB%91%E6%A0%91left-leaning-red-black-tree","ariaLabel":"左偏红黑树left leaning red black tree permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"解释"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"解释"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E8%A7%A3%E9%87%8A","ariaLabel":"解释 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"左偏红黑树是一种容易实现的红黑树变体。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"与普通的红黑树不同的是，在左偏红黑树中，是边具有颜色而不是节点具有颜色。我们习惯用一个节点的颜色代指它的父亲边的颜色。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"左偏红黑树对红黑树进行了进一步限制，一个黑色节点的左右儿子："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"要么全是黑色；"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"要么左儿子是红色，右儿子是黑色。"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"符合条件的情况："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/c875f5138ce21a810e38840dd2f6a349/llrbt-1.png","alt":"llrbt1"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"不符合条件的情况："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/7b2f907993e811891fd597f8703ac1d8/llrbt-2.png","alt":"llrbt2"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这是左偏树的「左偏」性质：红色边只能是左偏的。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"过程"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"过程"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E8%BF%87%E7%A8%8B","ariaLabel":"过程 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"插入"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"插入"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E6%8F%92%E5%85%A5","ariaLabel":"插入 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我们首先使用普通的 BST 插入方法，在树的底部插入一个红色的叶子节点，然后通过从下向上的调整，使得插入后的树仍然符合左偏红黑树的性质。下面描述调整的过程："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/67fdc720f93758c462dd62db50b199bc/llrbt-3.png","alt":"llrbt3"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"插入后，可能会产生一条右偏的红色边，因此需要对红边右偏的情况进行一次左旋："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/571a5af7eb8d9d8be5eb1fedba5cdfc4/llrbt-4.png","alt":"llrbt4"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"考虑左旋后会产生两条连续的左偏红色边："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/c8026a2ff6d58888fc7bc68bbe7d69d9/llrbt-5.png","alt":"llrbt5"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"因此需要把它进行一次右旋。而对于右旋后的情况，我们应该对它进行 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"color_flip"}]},{"type":"text","value":"：即翻转该节点和它的两个儿子的颜色"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/d2a64e802001fb5ca7251bf806876739/llrbt-6.png","alt":"llrbt6"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"从而消灭右偏的红边。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"details","properties":{"className":["note"],"open":"false"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"参考代码（部分）"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"删除"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"删除"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%88%A0%E9%99%A4","ariaLabel":"删除 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"删除操作基于这样的思想：我们不能删除黑色的节点，因为这样会破坏黑高。所以我们需要保证我们最后删除的节点是红色的。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"删除最小值节点"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"删除最小值节点"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%88%A0%E9%99%A4%E6%9C%80%E5%B0%8F%E5%80%BC%E8%8A%82%E7%82%B9","ariaLabel":"删除最小值节点 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"首先来试一下删除整棵树里的最小值。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"怎么才能保证最后删除的节点是红色的呢？我们需要在向下递归的过程中保证一个性质：如果当前节点是 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"h"}]},{"type":"text","value":"，那么需要保证 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"h"}]},{"type":"text","value":" 是红色，或者 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"h->lc"}]},{"type":"text","value":" 是红色。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"考虑这样做的正确性，如果我们能够通过各种旋转和反转颜色操作成功维护这个性质，那么当我们到达最小的节点 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"h_min"}]},{"type":"text","value":" 的时候，有 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"h_min"}]},{"type":"text","value":" 是红色，或者 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"h_min"}]},{"type":"text","value":" 的左子树——但是 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"h_min"}]},{"type":"text","value":" 根本没有左子树！所以这就保证了最小值节点一定是红的，既然它是红色的，我们就可以大胆的删除它，然后用与插入操作相同的调整思路对树进行调整。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"下面我们来考虑怎么满足这个性质，注意，我们会在向下递归的时候 "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"临时地"}]},{"type":"text","value":" 破坏左偏红黑树的若干性质，但是当我们从递归中返回时还会将其恢复。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/8bef8346f0c8bd0ff8517a74da1f43e5/llrbt-7.png","alt":"llrbt-7"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"下图描述一种简单的情况，我们只需要一次翻转颜色即可。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"但如果 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"h->rc->lc"}]},{"type":"text","value":" 是红色，情况会比较复杂："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/8157b9b5dc98d9e8bc0b7285f576d5b7/llrbt-8.png","alt":"llrbt-8"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如果只进行翻转颜色，会产生连续的红边，而考虑我们递归返回的时候，是无法修复这样的情况的，因此需要进行处理。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"然后就可以进行删除了："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"details","properties":{"className":["note"],"open":"false"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"参考代码（部分）"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h5","properties":{},"children":[{"type":"text","value":"删除任意节点"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"删除任意节点"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%88%A0%E9%99%A4%E4%BB%BB%E6%84%8F%E8%8A%82%E7%82%B9","ariaLabel":"删除任意节点 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"我们首先考虑删除叶子：与删最小值类似，我们在删除任意值的过程中也要维护一个性质，不过这次比较特殊，因为我们不是只向左边走，而是可以向左右两个方向走，因此在删除过程中维护的性质是这样的：如果往左走，当前节点是 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"h"}]},{"type":"text","value":"，那么需要保证 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"h"}]},{"type":"text","value":" 是红色，或者 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"h->lc"}]},{"type":"text","value":" 是红色；如果往右走，当前节点是 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"h"}]},{"type":"text","value":"，那么需要保证 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"h"}]},{"type":"text","value":" 是红色，或者 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"h->rc"}]},{"type":"text","value":" 是红色。这样可以保证我们最后总会删掉一个红色节点。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"下面考虑删除非叶子节点，我们只需要找到其右子树（如果有）里的最小节点，然后用右子树的最小节点的值代替该节点的值，最后删除右子树里的最小节点。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"/369d90b1d0b08fc9b5920d241c75d818/llrbt-9.png","alt":"llrbt-9"},"children":[]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"那如果没有右子树怎么办？我们需要把左子树旋转过来，这样就不会出现这个问题了。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"details","properties":{"className":["note"],"open":"false"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"参考代码（部分）"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"实现"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"实现"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%AE%9E%E7%8E%B0","ariaLabel":"实现 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"下面的代码是用左偏红黑树实现的 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Set"}]},{"type":"text","value":"，即有序不可重集合："}]},{"type":"text","value":"\n"},{"type":"element","tagName":"details","properties":{"className":["note"],"open":"false"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"参考代码"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"参考资料与拓展阅读"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"参考资料与拓展阅读"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99%E4%B8%8E%E6%8B%93%E5%B1%95%E9%98%85%E8%AF%BB","ariaLabel":"参考资料与拓展阅读 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://sedgewick.io/wp-content/themes/sedgewick/papers/2008LLRB.pdf"},"children":[{"type":"text","value":"Left-Leaning Red-Black Trees"}]},{"type":"text","value":"-  Robert Sedgewick Princeton University"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://algs4.cs.princeton.edu/lectures/keynote/33BalancedSearchTrees-2x2.pdf"},"children":[{"type":"text","value":"Balanced Search Trees"}]},{"type":"text","value":"-_Algorithms_Robert Sedgewick | Kevin Wayne"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"style","properties":{},"children":[{"type":"text","value":".anchorLink.before{position:absolute;top:0;left:0;transform:translateX(-100%);padding-right:4px}.anchorLink.after{display:inline-block;padding-left:4px}h1 .anchorLink svg,h2 .anchorLink svg,h3 .anchorLink svg,h4 .anchorLink svg,h5 .anchorLink svg,h6 .anchorLink svg{visibility:hidden}h1 .anchorLink:focus svg,h1:hover .anchorLink svg,h2 .anchorLink:focus svg,h2:hover .anchorLink svg,h3 .anchorLink:focus svg,h3:hover .anchorLink svg,h4 .anchorLink:focus svg,h4:hover .anchorLink svg,h5 .anchorLink:focus svg,h5:hover .anchorLink svg,h6 .anchorLink:focus svg,h6:hover .anchorLink svg{visibility:visible}a.anchor{display:inline-block;position:relative;top:-159px;visibility:hidden}@media only screen and (max-width:1279.95px){a.anchor{top:-101px}}"}]}],"data":{"quirksMode":false}},"headings":[{"value":"红黑树<a className=\"anchor\" id=\"红黑树\"></a>","depth":2,"id":null},{"value":"性质<a className=\"anchor\" id=\"性质\"></a>","depth":3,"id":null},{"value":"左偏红黑树（Left Leaning Red Black Tree）<a className=\"anchor\" id=\"左偏红黑树left-leaning-red-black-tree\"></a>","depth":2,"id":null},{"value":"解释<a className=\"anchor\" id=\"解释\"></a>","depth":3,"id":null},{"value":"过程<a className=\"anchor\" id=\"过程\"></a>","depth":3,"id":null},{"value":"插入<a className=\"anchor\" id=\"插入\"></a>","depth":4,"id":null},{"value":"删除<a className=\"anchor\" id=\"删除\"></a>","depth":4,"id":null},{"value":"删除最小值节点<a className=\"anchor\" id=\"删除最小值节点\"></a>","depth":5,"id":null},{"value":"删除任意节点<a className=\"anchor\" id=\"删除任意节点\"></a>","depth":5,"id":null},{"value":"实现<a className=\"anchor\" id=\"实现\"></a>","depth":2,"id":null},{"value":"参考资料与拓展阅读<a className=\"anchor\" id=\"参考资料与拓展阅读\"></a>","depth":2,"id":null}],"frontmatter":{"author":"Tifa, SunsetGlow95, WenzelTian, Ir1dXD, mgt, Weiliang, hly1204, Margatroid","tags":["ds"],"title":"左偏红黑树","noMeta":null,"noComment":null,"description":null},"parent":{"relativePath":"ds/llrbt.md","modifiedTime":"2023/02/03","birthTime":"2023-02-03T16:29:10.698Z","changeTime":"2023-02-03T16:29:10.698Z"}}},"pageContext":{"id":"24338c0b-091e-51bf-87eb-e8e6acc04b10","lastModified":"2022-12-04T15:48:02+08:00","next":{"node":{"fields":{"slug":"/graph/diff-constraints/"},"id":"135de0aa-32c7-5277-b2aa-c73c49e32089","frontmatter":{"tags":["graph"],"title":"差分约束"},"fileAbsolutePath":"/home/runner/work/oiwiki-bootstrap/oiwiki-bootstrap/cauldron/docs/graph/diff-constraints.md"}}}},
    "staticQueryHashes": ["2462162885","2862490856","3656965534"]}