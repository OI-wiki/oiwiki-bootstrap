{
    "componentChunkName": "component---node-modules-gatsby-theme-oi-wiki-src-templates-doc-js",
    "path": "/contest/common-tricks/",
    "result": {"data":{"mdx":{"id":"73b6c4e3-44cd-5d2f-844f-ac3db9e8139c","wordCount":{"words":111},"fields":{"slug":"/contest/common-tricks/","isIndex":false},"excerpt":"…","htmlAst":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"本页面主要列举一些竞赛中的小技巧。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"利用局部性"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"利用局部性"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%88%A9%E7%94%A8%E5%B1%80%E9%83%A8%E6%80%A7","ariaLabel":"利用局部性 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"局部性是指程序倾向于引用邻近于其他最近引用过的数据项的数据项，或者最近引用过的数据项本身。局部性分为时间局部性和空间局部性。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"循环展开。通过适当的循环展开可以减少整个计算中关键路径上的操作数量"}]},{"type":"text","value":"\n\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"重新结合变换，增加了可以并行执行的运算数量。"}]},{"type":"text","value":"\n\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"循环宏定义"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"循环宏定义"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%BE%AA%E7%8E%AF%E5%AE%8F%E5%AE%9A%E4%B9%89","ariaLabel":"循环宏定义 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"如下代码可使用宏定义简化："}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"另外推荐一个比较有用的宏定义："}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"善用 namespace"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"善用-namespace"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%96%84%E7%94%A8-namespace","ariaLabel":"善用 namespace permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"使用 namespace 能使程序可读性更好，便于调试。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"details","properties":{"className":["note"],"open":"false"},"children":[{"type":"element","tagName":"summary","properties":{},"children":[{"type":"text","value":"例题：NOI 2018 屠龙勇士"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"使用宏进行调试"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"使用宏进行调试"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E4%BD%BF%E7%94%A8%E5%AE%8F%E8%BF%9B%E8%A1%8C%E8%B0%83%E8%AF%95","ariaLabel":"使用宏进行调试 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"编程者在本地测试的时候，往往要加入一些调试语句。而在需要提交到 OJ 时，为了不使调试语句的输出影响到系统对程序输出结果的判断，就要把它们全部删除，耗时较多。这种情况下，可以通过定义宏的方式来节省时间。大致的程序框架是这样的："}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#ifdef"}]},{"type":"text","value":" 会检查程序中是否有 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#define"}]},{"type":"text","value":" 定义的对应标识符，如果有定义，就会执行后面的语句。而 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#ifndef"}]},{"type":"text","value":" 会在没有定义相应标识符的情况下执行后面的语句。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这样，只需在 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#ifdef DEBUG"}]},{"type":"text","value":" 里写好调试用代码，"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#ifndef DEBUG"}]},{"type":"text","value":" 里写好真正提交的代码，就能方便地进行本地测试。提交程序的时候，只需要将 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#define DEBUG"}]},{"type":"text","value":" 一行注释掉即可。也可以不在程序中定义标识符，而是通过 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"-DDEBUG"}]},{"type":"text","value":" 的编译选项在编译的时候定义 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"DEBUG"}]},{"type":"text","value":" 标识符。这样就可以在提交的时候不用修改程序了。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"不少 OJ 都开启了 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"-DONLINE_JUDGE"}]},{"type":"text","value":" 这一编译选项，善用这一特性可以节约不少时间。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"对拍"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"对拍"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%AF%B9%E6%8B%8D","ariaLabel":"对拍 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"对拍是一种进行检验或调试的方法，通过对比两个程序的输出来检验程序的正确性。可以将自己程序的输出与其他程序的输出进行对比，从而判断自己的程序是否正确。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"对拍过程要多次进行，因此需要通过批处理的方法来实现对拍的自动化。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"具体而言，对拍需要一个 "},{"type":"element","tagName":"a","properties":{"href":"../tools/testlib/generator.md"},"children":[{"type":"text","value":"数据生成器"}]},{"type":"text","value":" 和两个要进行输出结果比对的程序。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"每运行一次数据生成器都将生成的数据写入输入文件，通过重定向的方法使两个程序读入数据，并将输出写入指定文件，最后利用 Windows 下的 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"fc"}]},{"type":"text","value":" 命令比对文件（Linux 下为 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"diff"}]},{"type":"text","value":" 命令）来检验程序的正确性。如果发现程序出错，可以直接利用刚刚生成的数据进行调试。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"对拍程序的大致框架如下："}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"内存池"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"内存池"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%86%85%E5%AD%98%E6%B1%A0","ariaLabel":"内存池 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"当动态分配内存时，频繁使用 "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"new"}]},{"type":"text","value":"/"},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"malloc"}]},{"type":"text","value":" 会占用大量的时间和空间，甚至生成大量的内存碎片从而降低程序的性能，可能会使原本正确的程序 TLE/MLE。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"这时候需要使用到“内存池”这种技巧：在真正使用内存之前，先申请分配一定大小的内存作为备用。当需要动态分配时直接从备用内存中分配一块即可。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"在大多数 OI 题当中，可以预先算出需要使用到的最大内存并一次性申请分配。"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"示例："}]},{"type":"text","value":"\n\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"参考资料"},{"type":"element","tagName":"a","properties":{"className":["anchor"],"id":"参考资料"},"children":[]},{"type":"element","tagName":"a","properties":{"href":"#%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99","ariaLabel":"参考资料 permalink","className":["anchorLink","after"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://studyingfather.blog.luogu.org/some-coding-tips-for-oiers"},"children":[{"type":"text","value":"洛谷日报 #86"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"《算法竞赛入门经典 习题与解答》"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"style","properties":{},"children":[{"type":"text","value":".anchorLink.before{position:absolute;top:0;left:0;transform:translateX(-100%);padding-right:4px}.anchorLink.after{display:inline-block;padding-left:4px}h1 .anchorLink svg,h2 .anchorLink svg,h3 .anchorLink svg,h4 .anchorLink svg,h5 .anchorLink svg,h6 .anchorLink svg{visibility:hidden}h1 .anchorLink:focus svg,h1:hover .anchorLink svg,h2 .anchorLink:focus svg,h2:hover .anchorLink svg,h3 .anchorLink:focus svg,h3:hover .anchorLink svg,h4 .anchorLink:focus svg,h4:hover .anchorLink svg,h5 .anchorLink:focus svg,h5:hover .anchorLink svg,h6 .anchorLink:focus svg,h6:hover .anchorLink svg{visibility:visible}a.anchor{display:inline-block;position:relative;top:-159px;visibility:hidden}@media only screen and (max-width:1279.95px){a.anchor{top:-101px}}"}]}],"data":{"quirksMode":false}},"headings":[{"value":"利用局部性<a className=\"anchor\" id=\"利用局部性\"></a>","depth":2,"id":null},{"value":"循环宏定义<a className=\"anchor\" id=\"循环宏定义\"></a>","depth":2,"id":null},{"value":"善用 namespace<a className=\"anchor\" id=\"善用-namespace\"></a>","depth":2,"id":null},{"value":"使用宏进行调试<a className=\"anchor\" id=\"使用宏进行调试\"></a>","depth":2,"id":null},{"value":"对拍<a className=\"anchor\" id=\"对拍\"></a>","depth":2,"id":null},{"value":"内存池<a className=\"anchor\" id=\"内存池\"></a>","depth":2,"id":null},{"value":"参考资料<a className=\"anchor\" id=\"参考资料\"></a>","depth":2,"id":null}],"frontmatter":{"author":"Ir1dXD, mgt, Shuhao, StudyingFather, NachtgeistW","tags":["contest"],"title":"常见技巧","noMeta":null,"noComment":null,"description":null},"parent":{"relativePath":"contest/common-tricks.md","modifiedTime":"2023/02/03","birthTime":"2023-02-03T16:29:10.666Z","changeTime":"2023-02-03T16:29:10.666Z"}}},"pageContext":{"id":"73b6c4e3-44cd-5d2f-844f-ac3db9e8139c","lastModified":"2022-02-12T20:36:07-06:00","next":{"node":{"fields":{"slug":"/contest/common-mistakes/"},"id":"4902a251-0cc7-57dc-bf54-bbe832baa3e5","frontmatter":{"tags":["contest"],"title":"常见错误"},"fileAbsolutePath":"/home/runner/work/oiwiki-bootstrap/oiwiki-bootstrap/cauldron/docs/contest/common-mistakes.md"}}}},
    "staticQueryHashes": ["2462162885","2862490856","3656965534"]}